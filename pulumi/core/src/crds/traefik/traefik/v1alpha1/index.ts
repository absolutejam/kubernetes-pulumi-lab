// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { IngressRouteArgs } from "./ingressRoute";
export type IngressRoute = import("./ingressRoute").IngressRoute;
export const IngressRoute: typeof import("./ingressRoute").IngressRoute = null as any;
utilities.lazyLoad(exports, ["IngressRoute"], () => require("./ingressRoute"));

export { MiddlewareArgs } from "./middleware";
export type Middleware = import("./middleware").Middleware;
export const Middleware: typeof import("./middleware").Middleware = null as any;
utilities.lazyLoad(exports, ["Middleware"], () => require("./middleware"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:traefik.containo.us/v1alpha1:IngressRoute":
                return new IngressRoute(name, <any>undefined, { urn })
            case "kubernetes:traefik.containo.us/v1alpha1:Middleware":
                return new Middleware(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "traefik.containo.us/v1alpha1", _module)
