apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/instance":"argo","app.kubernetes.io/managed-by":"pulumi","app.kubernetes.io/name":"argocd-notifications-controller","app.kubernetes.io/part-of":"argocd","helm.sh/chart":"argo-cd-5.33.3"},"name":"argo-argocd-notifications-controller","namespace":"argocd-system"},"spec":{"replicas":1,"revisionHistoryLimit":3,"selector":{"matchLabels":{"app.kubernetes.io/instance":"argo","app.kubernetes.io/name":"argocd-notifications-controller"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/instance":"argo","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"argocd-notifications-controller","app.kubernetes.io/part-of":"argocd","helm.sh/chart":"argo-cd-5.33.3"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-notifications-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["/usr/local/bin/argocd-notifications","--metrics-port=9001","--loglevel=info","--logformat=text","--namespace=argocd-system","--argocd-repo-server=argo-argocd-repo-server:8081"],"image":"quay.io/argoproj/argocd:v2.7.2","imagePullPolicy":"IfNotPresent","name":"notifications-controller","ports":[{"containerPort":9001,"name":"metrics","protocol":"TCP"}],"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}],"workingDir":"/app"}],"dnsPolicy":"ClusterFirst","serviceAccountName":"argocd-notifications-controller","volumes":[{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/instance: argo
    app.kubernetes.io/managed-by: pulumi
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-5.33.3
  name: argo-argocd-notifications-controller
  namespace: argocd-system
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo
      app.kubernetes.io/name: argocd-notifications-controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: notifications-controller
        app.kubernetes.io/instance: argo
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-notifications-controller
        app.kubernetes.io/part-of: argocd
        helm.sh/chart: argo-cd-5.33.3
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argocd-notifications-controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - /usr/local/bin/argocd-notifications
        - --metrics-port=9001
        - --loglevel=info
        - --logformat=text
        - --namespace=argocd-system
        - --argocd-repo-server=argo-argocd-repo-server:8081
        image: quay.io/argoproj/argocd:v2.7.2
        imagePullPolicy: IfNotPresent
        name: notifications-controller
        ports:
        - containerPort: 9001
          name: metrics
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /app/config/tls
          name: tls-certs
        - mountPath: /app/config/reposerver/tls
          name: argocd-repo-server-tls
        workingDir: /app
      dnsPolicy: ClusterFirst
      serviceAccountName: argocd-notifications-controller
      volumes:
      - configMap:
          name: argocd-tls-certs-cm
        name: tls-certs
      - name: argocd-repo-server-tls
        secret:
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
          optional: true
          secretName: argocd-repo-server-tls
