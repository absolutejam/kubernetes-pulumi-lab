// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./input";
import * as outputs from "./output";

import { ObjectMeta } from "../meta/v1";

export namespace bitnami {
  export namespace v1alpha1 {
    /**
     * SealedSecretSpec is the specification of a SealedSecret
     */
    export interface SealedSecretSpec {
      /**
       * Data is deprecated and will be removed eventually. Use per-value EncryptedData instead.
       */
      data?: string;
      encryptedData: { [key: string]: any };
      /**
       * Template defines the structure of the Secret that will be created from this sealed secret.
       */
      template?: outputs.bitnami.v1alpha1.SealedSecretSpecTemplate;
    }

    /**
     * Template defines the structure of the Secret that will be created from this sealed secret.
     */
    export interface SealedSecretSpecTemplate {
      /**
       * Keys that should be templated using decrypted data
       */
      data?: { [key: string]: string };
      /**
       * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      metadata?: { [key: string]: any };
      /**
       * Used to facilitate programmatic handling of secret data.
       */
      type?: string;
    }

    /**
     * SealedSecretStatus is the most recently observed status of the SealedSecret.
     */
    export interface SealedSecretStatus {
      /**
       * Represents the latest available observations of a sealed secret's current state.
       */
      conditions?: outputs.bitnami.v1alpha1.SealedSecretStatusConditions[];
      /**
       * ObservedGeneration reflects the generation most recently observed by the sealed-secrets controller.
       */
      observedGeneration?: number;
    }

    /**
     * SealedSecretCondition describes the state of a sealed secret at a certain point.
     */
    export interface SealedSecretStatusConditions {
      /**
       * Last time the condition transitioned from one status to another.
       */
      lastTransitionTime?: string;
      /**
       * The last time this condition was updated.
       */
      lastUpdateTime?: string;
      /**
       * A human readable message indicating details about the transition.
       */
      message?: string;
      /**
       * The reason for the condition's last transition.
       */
      reason?: string;
      /**
       * Status of the condition for a sealed secret. Valid values for "Synced": "True", "False", or "Unknown".
       */
      status: string;
      /**
       * Type of condition for a sealed secret. Valid value: "Synced"
       */
      type: string;
    }
  }
}
